/**
 * This class is generated by jOOQ
 */
package dataaccess.database.tables.records;


import dataaccess.database.tables.Node;

import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NodeRecord extends UpdatableRecordImpl<NodeRecord> implements Record5<String, Integer, String, BigDecimal, BigDecimal> {

	private static final long serialVersionUID = -1872686318;

	/**
	 * Setter for <code>public.Node.Id</code>.
	 */
	public void setId(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.Node.Id</code>.
	 */
	public String getId() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>public.Node.NetworkId</code>.
	 */
	public void setNetworkid(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.Node.NetworkId</code>.
	 */
	public Integer getNetworkid() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>public.Node.QuadKey</code>.
	 */
	public void setQuadkey(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.Node.QuadKey</code>.
	 */
	public String getQuadkey() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>public.Node.x</code>.
	 */
	public void setX(BigDecimal value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>public.Node.x</code>.
	 */
	public BigDecimal getX() {
		return (BigDecimal) getValue(3);
	}

	/**
	 * Setter for <code>public.Node.y</code>.
	 */
	public void setY(BigDecimal value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>public.Node.y</code>.
	 */
	public BigDecimal getY() {
		return (BigDecimal) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record2<String, Integer> key() {
		return (Record2) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<String, Integer, String, BigDecimal, BigDecimal> fieldsRow() {
		return (Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<String, Integer, String, BigDecimal, BigDecimal> valuesRow() {
		return (Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return Node.NODE.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return Node.NODE.NETWORKID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Node.NODE.QUADKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<BigDecimal> field4() {
		return Node.NODE.X;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<BigDecimal> field5() {
		return Node.NODE.Y;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getNetworkid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getQuadkey();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BigDecimal value4() {
		return getX();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public BigDecimal value5() {
		return getY();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NodeRecord value1(String value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NodeRecord value2(Integer value) {
		setNetworkid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NodeRecord value3(String value) {
		setQuadkey(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NodeRecord value4(BigDecimal value) {
		setX(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NodeRecord value5(BigDecimal value) {
		setY(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NodeRecord values(String value1, Integer value2, String value3, BigDecimal value4, BigDecimal value5) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached NodeRecord
	 */
	public NodeRecord() {
		super(Node.NODE);
	}

	/**
	 * Create a detached, initialised NodeRecord
	 */
	public NodeRecord(String id, Integer networkid, String quadkey, BigDecimal x, BigDecimal y) {
		super(Node.NODE);

		setValue(0, id);
		setValue(1, networkid);
		setValue(2, quadkey);
		setValue(3, x);
		setValue(4, y);
	}
}
