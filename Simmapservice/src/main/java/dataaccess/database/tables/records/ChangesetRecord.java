/**
 * This class is generated by jOOQ
 */
package dataaccess.database.tables.records;


import dataaccess.database.tables.Changeset;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChangesetRecord extends UpdatableRecordImpl<ChangesetRecord> implements Record4<Long, String, Integer, Integer> {

	private static final long serialVersionUID = 1914657242;

	/**
	 * Setter for <code>public.Changeset.Id</code>.
	 */
	public void setId(Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.Changeset.Id</code>.
	 */
	public Long getId() {
		return (Long) getValue(0);
	}

	/**
	 * Setter for <code>public.Changeset.Name</code>.
	 */
	public void setName(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.Changeset.Name</code>.
	 */
	public String getName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>public.Changeset.UserNr</code>.
	 */
	public void setUsernr(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.Changeset.UserNr</code>.
	 */
	public Integer getUsernr() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>public.Changeset.NetworkId</code>.
	 */
	public void setNetworkid(Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>public.Changeset.NetworkId</code>.
	 */
	public Integer getNetworkid() {
		return (Integer) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Long> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Long, String, Integer, Integer> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Long, String, Integer, Integer> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field1() {
		return Changeset.CHANGESET.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Changeset.CHANGESET.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return Changeset.CHANGESET.USERNR;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return Changeset.CHANGESET.NETWORKID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getUsernr();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getNetworkid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChangesetRecord value1(Long value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChangesetRecord value2(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChangesetRecord value3(Integer value) {
		setUsernr(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChangesetRecord value4(Integer value) {
		setNetworkid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ChangesetRecord values(Long value1, String value2, Integer value3, Integer value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ChangesetRecord
	 */
	public ChangesetRecord() {
		super(Changeset.CHANGESET);
	}

	/**
	 * Create a detached, initialised ChangesetRecord
	 */
	public ChangesetRecord(Long id, String name, Integer usernr, Integer networkid) {
		super(Changeset.CHANGESET);

		setValue(0, id);
		setValue(1, name);
		setValue(2, usernr);
		setValue(3, networkid);
	}
}
