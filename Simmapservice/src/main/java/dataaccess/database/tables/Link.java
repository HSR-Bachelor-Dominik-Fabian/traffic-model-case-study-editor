/**
 * This class is generated by jOOQ
 */
package dataaccess.database.tables;


import dataaccess.database.Keys;
import dataaccess.database.Public;
import dataaccess.database.tables.records.LinkRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Link extends TableImpl<LinkRecord> {

	private static final long serialVersionUID = -142708243;

	/**
	 * The reference instance of <code>public.Link</code>
	 */
	public static final Link LINK = new Link();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<LinkRecord> getRecordType() {
		return LinkRecord.class;
	}

	/**
	 * The column <code>public.Link.Id</code>.
	 */
	public final TableField<LinkRecord, String> ID = createField("Id", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "");

	/**
	 * The column <code>public.Link.NetworkId</code>.
	 */
	public final TableField<LinkRecord, Integer> NETWORKID = createField("NetworkId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.Link.QuadKey</code>.
	 */
	public final TableField<LinkRecord, String> QUADKEY = createField("QuadKey", org.jooq.impl.SQLDataType.VARCHAR.length(18), this, "");

	/**
	 * The column <code>public.Link.length</code>.
	 */
	public final TableField<LinkRecord, BigDecimal> LENGTH = createField("length", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>public.Link.freespeed</code>.
	 */
	public final TableField<LinkRecord, BigDecimal> FREESPEED = createField("freespeed", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>public.Link.capacity</code>.
	 */
	public final TableField<LinkRecord, BigDecimal> CAPACITY = createField("capacity", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>public.Link.permlanes</code>.
	 */
	public final TableField<LinkRecord, BigDecimal> PERMLANES = createField("permlanes", org.jooq.impl.SQLDataType.NUMERIC, this, "");

	/**
	 * The column <code>public.Link.oneway</code>.
	 */
	public final TableField<LinkRecord, Boolean> ONEWAY = createField("oneway", org.jooq.impl.SQLDataType.BOOLEAN, this, "\n");

	/**
	 * The column <code>public.Link.modes</code>.
	 */
	public final TableField<LinkRecord, String> MODES = createField("modes", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

	/**
	 * The column <code>public.Link.from</code>.
	 */
	public final TableField<LinkRecord, String> FROM = createField("from", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

	/**
	 * The column <code>public.Link.to</code>.
	 */
	public final TableField<LinkRecord, String> TO = createField("to", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

	/**
	 * Create a <code>public.Link</code> table reference
	 */
	public Link() {
		this("Link", null);
	}

	/**
	 * Create an aliased <code>public.Link</code> table reference
	 */
	public Link(String alias) {
		this(alias, LINK);
	}

	private Link(String alias, Table<LinkRecord> aliased) {
		this(alias, aliased, null);
	}

	private Link(String alias, Table<LinkRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<LinkRecord> getPrimaryKey() {
		return Keys.LINKID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<LinkRecord>> getKeys() {
		return Arrays.<UniqueKey<LinkRecord>>asList(Keys.LINKID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<LinkRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<LinkRecord, ?>>asList(Keys.LINK__LINK_NETWORK, Keys.LINK__LINK_NODE_FROM, Keys.LINK__LINK_NODE_TO);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Link as(String alias) {
		return new Link(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Link rename(String name) {
		return new Link(name, null);
	}
}
